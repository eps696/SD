# This code is built from the Stable Diffusion repository: https://github.com/CompVis/stable-diffusion.
# Adobeâ€™s modifications are licensed under the Adobe Research License. 

model:
  base_learning_rate: 1.0e-05
  target: custom.model.CustomDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "image"
    cond_stage_key: "caption"
    image_size: 64
    channels: 4
    cond_stage_trainable: true   # Note: different from the one we trained before
    add_token: True
    freeze_model: "crossattn-kv"
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: False
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: custom.modules.FrozenCLIPEmbedderWrapper
      params:
        modifier_token: <new1>

data:
  target: train.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 2
    wrap: false
    train:
      target: custom.finetune_data.MaskBase
      params:
        size: 512
    train2:
      target: custom.finetune_data.MaskBase
      params:
        size: 512

lightning:
  modelcheckpoint: # from usual finetune
    params:
      verbose: false
      save_last: true
  callbacks:
    image_logger:
      target: train.ImageLogger
      params:
        batch_frequency: 500
        max_images: 4
        clamp: True
        increase_log_steps: false

  trainer:
    max_steps: 1000 # for gpu=1 batch=1 [orig was 300]
    find_unused_parameters: False
